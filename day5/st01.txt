// Getting input via STDIN
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

// function findAdjacent(words) {
//     for (let index = 0; index < words.length-1; index++){
//         if (words[index] == words[index + 1]) {
//             return index;
//         }
//     }
//     return -1;
// }

class Stack {
    constructor() {
        this.items = [];
        this.top = -1;
    }

    push(data) {
        this.items.push(data);
        this.top++;
    }

    pop() {
        this.items.pop();
        this.top--;
    }

    peek() {
        return this.items[this.top];
    }

    isEmpty() {
        return this.top == -1;
    }
}

inp.on("close", () => {
    let words = userInput[0].split(' ');
    // let index;
    // do {
    //     index = findAdjacent(words);

    //     if (index != -1) {
    //         words.splice(index, 2);
    //     }
    // } while (index != -1);

    // if (words.length > 0) {
    //     console.log(words.join(' '));
    // } else {
    //     console.log(-1);
    // }

    let stack = new Stack();
    for (let word of words) {
        if (stack.isEmpty()) {
            stack.push(word);
        } else {
            // compare the tos and the word
            if (word == stack.peek()) {
                stack.pop();
            } else {
                stack.push(word);
            }
        }
    }

    if (!stack.isEmpty()) {
        console.log(stack.items.join(' '));
    } else {
        console.log(-1);
    }
});